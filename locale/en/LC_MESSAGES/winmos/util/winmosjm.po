msgid "Winmostar Job Manager"
msgstr "Winmostar Job Manager"

msgid "Winmostarジョブマネージャ（Winmostar/JM）は、マルチコアのWindows PCを対象にしたジョブ管理ソフトウエアです。"
msgstr "Winmostar Job Manager (Winmostar/JM) is job management software for multi-core Windows PC."

msgid "Winmostarの補助プログラムとして動作し、WinmostarをインストールしたPC（ :dfn:`ローカルマシン` と呼ぶ）上でGAMESS、Gaussianなど各種ソルバの実行を自動でスケジューリングすることができます。"
msgstr "We can automatically schedule the execution of various solvers such as GAMESS, Gaussian etc. on PC ( :dfn:`local machine` ) which works as an auxiliary program of Winmostar and has Winmostar installed."

msgid "基本動作"
msgstr "Basic actions"

msgid "Winmostarでローカルマシン上でのジョブ（ :dfn:`ローカルジョブ` と呼ぶ）を実行を選択すると、下図のようなJMのウィンドウが立ち上がり、1番目のキューに登録されます。キューに登録されたジョブの :guilabel:`Status` はまず :guilabel:`WAIT` （実行待ち）となり、登録順、 :guilabel:`Priority` 、実行core数を考慮して順次 :guilabel:`RUN` に切り替わり、そのジョブが開始されます。処理が終了したジョブの :guilabel:`Status` は :guilabel:`END` に切り替わります。"
msgstr "In Winmostar, if you choose to execute a job (called :dfn:`local job`) on the local machine, the JM window as shown below will be launched and registered in the first queue. :guilabel: `Status` of the queued job is first :guilabel:`WAIT` (queued for execution), in order of registration, :guilabel:`Priority`, sequential considering the number of executed cores :guilabel:`RUN`, and the job is started. The :guilabel:`Status` of the job that has finished processing switches to :guilabel:`END`."

msgid "JMはWinmostarでローカルジョブを実行する時に自動で起動されますが、自動で終了することはないので、終了するときは ``x`` （閉じる）ボタンか :menuselection:`File --> Exit` から終了します。JMを終了すると、それ以降は :guilabel:`WAIT` 状態のジョブは開始されません。"
msgstr "JM is automatically started when executing a local job with Winmostar, but it does not end automatically, so if you want to exit it is the ``x`` (close) button :menuselection:`File --> Exit` It ends from. When you exit JM, the following jobs in the: guilabel: `WAIT` state will not start."

msgid "誤ってJMを停止した場合などJMを任意のタイミングで起動したい場合は、Winmostar本体の :menuselection:`ツール --> ジョブマネージャ` をクリックします。"
msgstr "If you want to start JM at an arbitrary timing such as stopping JM by mistake, click :menuselection:`Tools --> Job Manager` on the Winmostar main unit."

msgid ":guilabel:`MaxCores` はJMが使用できる最大コア数で、デフォルトではマシンのコア数に設定されます。この値が大きいと同時に多数のジョブが並列に実行されますが、ローカルマシンのコア数より多く設定しても効率は上がりません。"
msgstr ":guilabel:`MaxCores` is the maximum number of cores that JM can use and defaults to the number of cores of the machine. While this value is large, many jobs are executed in parallel, but setting it more than the number of cores on the local machine does not improve efficiency."

msgid "Windowsのタスクマネージャーを起動し、 :guilabel:`パフォーマンス` タブに移動すると、 :guilabel:`論理プロセッサ数` という欄に使用しているマシンのコア数が表示されます。"
msgstr "If you start the Windows Task Manager and go to the :guilabel:`Performance` tab, the number of cores of your machine will be displayed in the :guilabel:`Number of logical processors` field."

msgid "ジョブは基本的に :guilabel:`WAIT` 状態の古いジョブから順に実行されますが、 :guilabel:`Priority` を変更することでその順序を調整することができます。 :guilabel:`Priority` が小さい値のジョブほど高優先度で実行されます。"
msgstr "Jobs are basically executed in the order of old jobs in the :guilabel:`WAIT` state, but you can adjust their order by changing :guilabel:`Priority`. :guilabel:`Priority` has a lower value job execution with higher priority."

msgid "実行core数は、使用するソルバのキーワードで設定した値に設定されます。例えば、G03Wの場合は%nproc=の値、GAMESSの場合はNCPUSの値となります。G03Wは並列計算版が必要で、最大4コアまでの制限があります。"
msgstr "The number of executed cores is set to the value set by the keyword of the solver to be used. For example, the value of %nproc= for G03W, and the value of NCPUS for GAMESS. G03W requires a parallel calculation version, and there is a limit of up to 4 cores."

msgid "JMは二重に起動しないように調整されており、Winmostarを複数起動した場合、ジョブは一つのJMに対して登録されます。"
msgstr "JM has been adjusted not to start twice, and if you start Winmostar multiple times, the job will be registered for one JM."

msgid "JMが管理可能なジョブの数（キューの数）は最大で200個です。この数を超えると、古いものから順にキューから削除されますが、実行中のジョブがキューから削除されても、ジョブの処理自体は続行されます。"
msgstr "JM can manage up to 200 jobs (queues) . If exceeded, old queues are deleted. Even if the running job is deleted from the queue, the job processing itself will continue."

msgid "|JMwindow|"
msgstr "|JMwindow|"

msgid "MOPACに対しては、Winmostar本体の環境設定でJMの使用の有無を選択できます。JMを使わない場合はMOPAC計算後に自動的に計算結果がWinmostarのメインウィンドウに読み込まれますが、JMを使う場合はジョブの終了後にユーザが明示的に計算結果をWinmostar上で読み込ませる必要があります。"
msgstr "For MOPAC, you can select whether to use JM in the Preferences of Winmostar itself. If you do not use JM, calculation results are automatically loaded into Winmostar&#39;s main window after MOPAC calculation, but if you use JM, the user must explicitly load the calculation result on Winmostar after the job is finished ."

msgid "ジョブを強制終了・キャンセルする方法"
msgstr "How to forcibly terminate/cancel a job"

msgid ":guilabel:`RUN` 状態（実行中）のジョブを強制終了したい時は、そのジョブのプロンプト（DOS）ウィンドウの ``x`` （閉じる）ボタンを押します。JM上で :guilabel:`RUN` 状態のジョブの行をクリックして :guilabel:`Status` を :guilabel:`END` に変更することでも終了できる場合もありますが、MOPAC2009など一部のソルバではその操作が効きません。"
msgstr "If you want to forcibly terminate the job in :guilabel:`RUN` state (running), press the ``x`` (close) button in the job&#39;s prompt (DOS) window. On JM you can also finish by clicking on the line of the job in the guilabel: `run` state and changing the :guilabel:`Status` to :guilabel:`END`, but in some solvers such as MOPAC 2009 That operation does not work."

msgid "JMで :guilabel:`RUN` 状態のジョブの行をクリックすると、そのジョブのDOSウィンドウが前面に表示されます。"
msgstr "In JM, click on the row of the job in :guilabel:`RUN` state, the DOS window for that job will be displayed in the foreground."

msgid ":guilabel:`WAIT` 状態のジョブをキャンセルしたい場合は、そのジョブの行をJMで選択し、 :menuselection:`Edit --> Delete Job` かキーボードの :kbd:`Delete` キーを押してキューから削除します。キューから削除せずに実行させない場合は、 :guilabel:`Status` を :guilabel:`WAIT` から :guilabel:`END` に変更します。"
msgstr "If you want to cancel the job in the :guilabel:`WAIT` state, select the line of that job with JM and press :menuselection:`Edit --> Delete Job` or keyboard :kbd:`Delete` key. If you do not want to execute it without deleting it from the queue, change :guilabel:`Status` from :guilabel:`WAIT` to :guilabel:`END`."

msgid "開始時刻の指定して実行する方法"
msgstr "How to specify start time specified"

msgid "ウィンドウに表示される開始時刻は、 :guilabel:`WAIT` の時は実行キューに登録された時刻ですが、 :guilabel:`RUN` になった時にその時刻に変更されます。"
msgstr "The start time displayed in the window is the time registered in the execution queue when :guilabel:`WAIT`, but it changes to the time when it becomes :guilabel:`RUN`."

msgid "開始時刻に未来の時刻を設定することで、実行を遅らせることが可能です。一旦 :guilabel:`RUN` 状態になったジョブについても、 :ref:`jm_forcequit` の方法で強制終了した後、開始時刻を変更し :guilabel:`Status` を :guilabel:`WAIT` に変更すると、再度ジョブを実行することも可能です。（例えば、この方法を用いると、後で実行したいジョブの動作を事前に確認することができます。）"
msgstr "By setting the time of the future at the start time, execution can be delayed. Once you have made a :guilabel:`RUN` state, also forcibly terminate the job using the :ref:`jm_forcequit` method, then change the start time and change the :guilabel:`Status` to :guilabel:`WAIT` , It is also possible to execute the job again. (For example, using this method, you can check the operation of the job you want to execute later in advance.)"

msgid "ジョブを強制的に開始する方法"
msgstr "How to force a job to start"

msgid ":guilabel:`WAIT` 状態のジョブの :guilabel:`Status` を :guilabel:`RUN` に変更することで、その他の条件を無視して強制的に処理を開始することができます。同様に :guilabel:`END` 状態のジョブを :guilabel:`RUN` に変更して再開することもできます。"
msgstr "You can forcibly start processing ignoring other conditions by changing the :guilabel:`Status` of the job in the :guilabel:`WAIT` state to :guilabel:`RUN`. Likewise you can also resume the job with the :guilabel:`END` status changed to :guilabel:`RUN`."

msgid "省電力設定について"
msgstr "About power saving setting"

msgid "JMの起動中は、時間設定によって自動的にスタンバイ（スリープ）や休止状態に入ることを、JMが防止しています。手動操作でスタンバイ状態等に移行した後、テレビ録画ソフトのように自動的に復帰する機能はありませんので、ご注意ください。"
msgstr "During JM startup, JM prevents automatically entering standby (sleep) or hibernation mode depending on the time setting. Please note that it does not have a function to automatically restore like a TV recording software after entering the standby state etc. by manual operation."

msgid ":guilabel:`AutoShutdown` にチェックした場合は、全てのジョブが :guilabel:`END` 状態になった後に自動的にシャットダウンします。"
msgstr "When :guilabel:`AutoShutdown` is checked, all jobs are automatically shut down after entering the :guilabel:`END` state."